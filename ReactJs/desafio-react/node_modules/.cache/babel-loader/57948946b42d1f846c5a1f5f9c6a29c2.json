{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\DIO\\\\TQI-fullstack-bootcamp\\\\ReactJs\\\\desafio-react\\\\src\\\\providers\\\\github-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0\n    },\n    repositories: [],\n    starred: []\n  });\n\n  const getUser = username => {\n    setGithubState(prevState => ({ ...prevState,\n      loading: !prevState.loading\n    }));\n    api.get(`users/${username}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setGithubState(prevState => ({ ...prevState,\n        hasUser: true,\n        user: {\n          id: data.id,\n          avatar: data.avatar_url,\n          login: data.login,\n          name: data.name,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repos: data.public_repos\n        }\n      }));\n    }).finally(() => {\n      setGithubState(prevState => ({ ...prevState,\n        loading: !prevState.loading\n      }));\n    });\n  };\n\n  const getUserRepos = username => {\n    api.get(`users/${username}/repos`).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState(prevState => ({ ...prevState,\n        repositories: data\n      }));\n    });\n  };\n\n  const getUserStarred = username => {\n    api.get(`users/${username}/starred`).then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState(prevState => ({ ...prevState,\n        starred: data\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback(username => getUser(username), []),\n    getUserRepos: useCallback(username => getUserRepos(username), []),\n    getUserStarred: useCallback(username => getUserStarred(username), [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"OZ5qOP26/dRC0L2uBvRVgKpX8cg=\");\n\n_c = GithubProvider;\nexport default GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useState","api","GithubContext","loading","user","repositories","starred","GithubProvider","children","githubState","setGithubState","hasUser","id","undefined","avatar","login","name","html_url","blog","company","location","followers","following","public_gists","public_repos","getUser","username","prevState","get","then","data","avatar_url","finally","getUserRepos","console","log","JSON","stringify","getUserStarred","contextValue"],"sources":["C:/Users/lucas/Desktop/DIO/TQI-fullstack-bootcamp/ReactJs/desafio-react/src/providers/github-provider.js"],"sourcesContent":["import React, { createContext, useCallback, useState } from \"react\";\nimport api from \"../services/api\";\n\nexport const GithubContext = createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: [],\n});\n\nconst GithubProvider = ({ children }) => {\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0,\n    },\n    repositories: [],\n    starred: [],\n  });\n\n  const getUser = (username) => {\n    setGithubState((prevState) => ({\n      ...prevState,\n      loading: !prevState.loading,\n    }));\n\n    api\n      .get(`users/${username}`)\n      .then(({ data }) => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          hasUser: true,\n          user: {\n            id: data.id,\n            avatar: data.avatar_url,\n            login: data.login,\n            name: data.name,\n            html_url: data.html_url,\n            blog: data.blog,\n            company: data.company,\n            location: data.location,\n            followers: data.followers,\n            following: data.following,\n            public_gists: data.public_gists,\n            public_repos: data.public_repos,\n          },\n        }));\n      })\n      .finally(() => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          loading: !prevState.loading,\n        }));\n      });\n  };\n\n  const getUserRepos = (username) => {\n    api.get(`users/${username}/repos`).then(({ data }) => {\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState((prevState) => ({\n        ...prevState,\n        repositories: data,\n      }));\n    });\n  };\n\n  const getUserStarred = (username) => {\n    api.get(`users/${username}/starred`).then(({ data }) => {\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState((prevState) => ({\n        ...prevState,\n        starred: data,\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback((username) => getUser(username), []),\n    getUserRepos: useCallback((username) => getUserRepos(username), []),\n    getUserStarred: useCallback((username) => getUserStarred(username), []),\n  };\n\n  return (\n    <GithubContext.Provider value={contextValue}>\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}